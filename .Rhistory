names(bmi.dat)<-c("cat1", "cat2", "cat3")
plot.area(bmi.dat)
head(bmi.dat)
m
m
h
h.length
length(h)
seq(1,10)
seq(1,10)
install.packages("shiny")
---
?lm
?predict
?colSums
?dgamma
lm.package
lm
dgamma
dgamma
lm
predict
lm
dgamma
?predict
install.packages("RMySQL")
install.packages("httr", lib="C:/Users/JPECA/Documents/R/win-library/3.1")
library(httr)
library(httr)
url <- "http://biostat.jhsph.edu/~jleek/contact.html"
file <- content(GET(url),as="text")
file[15]
?readline
file
library(XML)
install.packages("XML", lib="C:/Users/JPECA/Documents/R/win-library/3.1")
capture.output(file)
strsplit(file, "\n")[[1]][15]
strsplit(file, "\n")[10]
strsplit(file, "\n")
lenght(strsplit(file, "\n")[[1]][10])
nchar(strsplit(file, "\n")[[1]][10])
nchar(strsplit(file, "\n")[[1]][20])
nchar(strsplit(file, "\n")[[1]][20])
nchar(strsplit(file, "\n")[[1]][100])
nchar(strsplit(file, "\n")[[1]][20])
nchar(strsplit(file, "\n")[[1]][30])
?read.file
x <- read.fwf(
file=url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"),
skip=4,
widths=c(16,4,4, -5,4,4,-5, 4,4,-5,4,4))
x
View(x)
View(x)
x <- read.fwf(
file=url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"),
skip=4,
widths=c(9,-5,4,4, -5,4,4,-5, 4,4,-5,4,4))
View(x)
View(x)
x <- read.fwf(
file=url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"),
skip=4,
widths=c(-1,9,-5,4,4, -5,4,4,-5, 4,4,-5,4,4))
View(x)
View(x)
x[3]
class(x[3])
class(x)
x$V3
sum(x$V4)
sum(x$V4)+sum(x$V9)
sum(x$V9)
rm(list=ls())
help()
??Introduction
??Introduction to R
help.search("introduction to r")
help
help()
help.start()
install.packages("vcd", lib="C:/Users/JPECA/Documents/R/win-library/3.1")
?vcd
help(package="vcd")
library(vcd)
summary(arthritis)
data(arthritis)
data(Arthritis)
summary(Arthritis)
str(Arthritis)
desc(Arthritis)
data()
??Arthritis
help(package="vcd")
data()
vcd.data()
data(package=vcd)
data(package="vcd")
function(package="vcd")
ls(package="vcd")
ls("package:vcd")
lsf.str("package:vcd", all = TRUE)
example(Arthritis)
q()
?xtabs
pol <- c("m", "f", "m", "m", "f")
visina <- c(1.84, 1.63, 1.78, 1.68, 1.72)
t <- data.frame(pol, visina)
t
type(table(t))
s <- table(t)
typeOf(s)
type.of(s)
typeof(s)
s
s <-table(t$pol)
s
typeof(s)
s[1]
s[2]
s[2][1]
s[2][2]
## Create data frame
y <- data.frama(a = 1, b="a")
## Print dput to console
dput(y)
## Create data frame
y <- data.frame(a = 1, b="a")
## Print dput to console
dput(y)
m = seq(1:20, nrow = 5)
m = matrix(seq(1:20), nrow = 5)
m
df = data.frame(m)
df
df.names = c(C1, C2, C3, C4, C5)
df.names = c("C1", "C2", "C3", "C4", "C52)
df.names = c("C1", "C2", "C3", "C4", "C52")
df
names(df) = c("C1", "C2", "C3", "C4", "C52")
names(df) = c("C1", "C2", "C3", "C4")
df
names(df)[1]="Col1"
df
df$col1
df$Col1
df$C4
postcode = c(21000, 26000, 11000)
names(postcode) = c("Novi Sad", "Pan훾evo" "Beograd")
names(postcode) = c("Novi Sad", "Pan훾evo" "Beograd")
names(postcode) = c("Novi Sad", "Pan훾evo", "Beograd")
postcode
postcode$Pan훾evo
postcode$Beograd
postcode[1]
z= 2+i5
z = 2.0
attrib(z)
attributes(z)
class(z)
length(z)
names(z)
is.na(z)
is.na(attributes(z))
type(z)
class(z)
class(df)
class(m)
attributes(df)
length(df)
nrows(df)
nrow(df)
ncol(df)
df.length
length(m)
attributes(m)
m$dim
dim(m)
nrow(m)
ncol(m)
?read.table
?sapply
sapply(df, class)
namse(df)
names(df)
install.packages("dplyr")
library(dplyr)
detach("package:dplyr", unload=TRUE)
library("dplyr", lib.loc="C:/myRLib")
mtcars
filter(mtcars, cyl == 8) %>% select(mpg)
filter(mtcars, cyl == 8) %>% select(row.names, mpg)
filter(mtcars, cyl == 8) %>% select(rows.name, mpg)
row.names
filter(mtcars, cyl == 8) %>% select( c(1, 2, 3))
row.names(mpg)
row.names(mtcars)
filter(mtcars, cyl == 8) %>% select( row.names(mtcars), c(1, 2, 3))
class(mtcars)
?tbl_df
tbl_df(mtcars)
mtcars$model = row.names(mtcars)
filter(mtcars, cyl == 8) %>% select( model, mpg)
filter(mtcars, cyl == 8) %>% select( model, mpg) %>% arrange(mpg)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2,1, 3, 1)
mi <- 0
lse <- w*(x- mi)^2
lse
)
mean(x)
mi <- 0.025
lse <- w*(x- mi)^2
lse
mi <- 0.025
lse <- sum(w*(x- mi)^2)
lse
mi <- 0.300
lse <- sum(w*(x- mi)^2)
lse
mi <- 0.1471
lse <- sum(w*(x- mi)^2)
lse
mean(x)/sd(x)
mean(x)*sd(x)
mean(x)/sd(x)
mi <- 1.077
lse <- sum(w*(x- mi)^2)
lse
library(manipulate)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
myReg <- function(beta){
mse <- sum((y-beta*x)^2)
}
manipulate(myReg(mu), mu = slider(-2, 1, step = 0.01))
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
myReg <- function(beta){
#mse <- sum((y-beta*x)^2)
g = ggplot(data.frame(x = x, y = y), aes(x = x, y = y))
g = g + geom_point(size = 6, colour = "black", alpha = 0.2)
g = g + geom_point(size = 4, colour = "salmon", alpha = 0.2)
g = g + xlim(0, 1) + ylim(-2, 2)
g = g + geom_abline(intercept = 0, slope = alpha)
}
manipulate(myReg(mu), mu = slider(-2, 1, step = 0.01))
library(manipulate)
library(ggplot)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
myReg <- function(beta){
#mse <- sum((y-beta*x)^2)
g = ggplot(data.frame(x = x, y = y), aes(x = x, y = y))
g = g + geom_point(size = 6, colour = "black", alpha = 0.2)
g = g + geom_point(size = 4, colour = "salmon", alpha = 0.2)
g = g + xlim(0, 1) + ylim(-2, 2)
g = g + geom_abline(intercept = 0, slope = beta)
}
manipulate(myReg(beta), beta = slider(-2, 1, step = 0.01))
library(ggplot2)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
myReg <- function(beta){
#mse <- sum((y-beta*x)^2)
g = ggplot(data.frame(x = x, y = y), aes(x = x, y = y))
g = g + geom_point(size = 6, colour = "black", alpha = 0.2)
g = g + geom_point(size = 4, colour = "salmon", alpha = 0.2)
g = g + xlim(0, 1) + ylim(-2, 2)
g = g + geom_abline(intercept = 0, slope = beta)
}
manipulate(myReg(beta), beta = slider(-2, 1, step = 0.01))
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
myReg <- function(beta){
#mse <- sum((y-beta*x)^2)
g = ggplot(data.frame(x = x, y = y), aes(x = x, y = y))
g = g + geom_point(size = 6, colour = "black", alpha = 0.2)
g = g + geom_point(size = 4, colour = "salmon", alpha = 0.2)
g = g + xlim(0, 1) + ylim(-2, 2)
g = g + geom_abline(intercept = 0, slope = beta)
g
}
manipulate(myReg(beta), beta = slider(-2, 1, step = 0.01))
library(manipulate)
library(ggplot2)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
myReg <- function(beta){
mse <- sum((y-beta*x)^2)
g = ggplot(data.frame(x = x, y = y), aes(x = x, y = y))
g = g + geom_point(size = 6, colour = "black", alpha = 0.2)
g = g + geom_point(size = 4, colour = "salmon", alpha = 0.2)
g = g + xlim(0, 1) + ylim(-2, 2)
g = g + geom_abline(intercept = 0, slope = beta
g = g + gtitle(past(("beta = ", beta, "mse = ", mse)))
g
}
manipulate(myReg(beta), beta = slider(-2, 1, step = 0.01))
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
myReg <- function(beta){
mse <- sum((y-beta*x)^2)
g = ggplot(data.frame(x = x, y = y), aes(x = x, y = y))
g = g + geom_point(size = 6, colour = "black", alpha = 0.2)
g = g + geom_point(size = 4, colour = "salmon", alpha = 0.2)
g = g + xlim(0, 1) + ylim(-2, 2)
g = g + geom_abline(intercept = 0, slope = beta)
g = g + gtitle(past(("beta = ", beta, "mse = ", mse)))
g
}
manipulate(myReg(beta), beta = slider(-2, 1, step = 0.01))
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
myReg <- function(beta){
mse <- sum((y-beta*x)^2)
g = ggplot(data.frame(x = x, y = y), aes(x = x, y = y))
g = g + geom_point(size = 6, colour = "black", alpha = 0.2)
g = g + geom_point(size = 4, colour = "salmon", alpha = 0.2)
g = g + xlim(0, 1) + ylim(-2, 2)
g = g + geom_abline(intercept = 0, slope = beta, size=2)
g = g + gtitle(paste("beta = ", beta, "mse = ", mse)))
g
}
manipulate(myReg(beta), beta = slider(-2, 1, step = 0.01))
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
myReg <- function(beta) {
mse <- sum((y-beta*x)^2)
g = ggplot(data.frame(x = x, y = y), aes(x = x, y = y))
g = g + geom_point(size = 6, colour = "black", alpha = 0.2)
g = g + geom_point(size = 4, colour = "salmon", alpha = 0.2)
g = g + xlim(0, 1) + ylim(-2, 2)
g = g + geom_abline(intercept = 0, slope = beta, size=2)
g = g + gtitle(paste("beta = ", beta, "mse = ", round(mse,3)))
g
}
manipulate(myReg(beta), beta = slider(-2, 1, step = 0.01))
library(manipulate)
library(ggplot2)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
myReg <- function(beta) {
mse <- sum((y-beta*x)^2)
g = ggplot(data.frame(x = x, y = y), aes(x = x, y = y))
g = g + geom_point(size = 6, colour = "black", alpha = 0.2)
g = g + geom_point(size = 4, colour = "salmon", alpha = 0.2)
g = g + xlim(0, 1) + ylim(-2, 2)
g = g + geom_abline(intercept = 0, slope = beta, size=2)
g = g + ggtitle(paste("beta = ", beta, "mse = ", round(mse,3)))
g
}
manipulate(myReg(beta), beta = slider(-2, 1, step = 0.01))
library(datasets)
data(mtcars)
mtcars
lm(mpg ~ weight, data=mtcars)
lm(mpg ~ wt, data=mtcars)
coef(lm(mpg ~ wt, data=mtcars))
coef(lm(mpg ~ wt, data=mtcars))[2]
rm(list=ls())
q1 <-1.5
q2<- 0.4*q1
Q2
q1 <-1.5
q2<- 0.4*q1
q2
x <- c(8.58, 10.46, 9.01, 9.46, 8.86)
xn <- (x-mean(x))/sd(x)
xn
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
xn <- (x-mean(x))/sd(x)
xn
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x)
b1 = coef(lm(y~x)[2]
b0 = mean(y) - mean(x)*b1
b1 = coef(lm(y~x))[2]
b0 = mean(y) - mean(x)*b1
b0
mean(x)
install.packages("swirl")
library(swirl)
swirl()
1
2
bye()
3
swirl()
swirl()
1:20
pi:10
15:1
?:
?':'
seq(1, 20)
seq(0,10, by=0.5)
seq(5,10, length=30)
my_seq <- seq(5,10, length=30)
length(my_seq)
1:lenght(my_seq)
1:lenhgt(my_seq)
1:lenght(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
bye()
swirl()
x
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo=11, bar=2, norf=NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2)<- c("foo", "bar", "norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo", "bar")]
setwd("C:/Users/JPECA/Dropbox/R_Programming/Assignement1")
source("cashVector.R")
makeVector(1:100)
x
x$get
vc <- makeVector(1:100)
vc$get
x$get
vc$get()
vc$mean()
vc$getmean()
vc$setmean()
vc$setmean(mean(vc$get()))
vc$getmean()
?matrix()
m <- matrix()
m
rm(list=ls)
rm(list=ls())탑
rm(list=ls())
setwd("~/GitHub/ProgrammingAssignment2")
source("cachematrix.R")
vc <- makeCacheMatrix(matrix(1:9,3,3))
vc$get()
source("cachematrix.R")
vc <- makeCacheMatrix(matrix(1:9,3,3))
vc$get()
vc$getinv()
vc$getivn()
source("cachematrix.R")
vc <- makeCacheMatrix(matrix(1:9,3,3))
vc$getivn()
vc$getinv()
cashSolve(vc$get())
cacheSolve(vc$get())
vc$get()
cashSolve(vc$get())
traceback()
cashSolve(vc$get())
debug(cachematrix.R)
debug(cacheSolve)
cashSolve(vc$get())
cacheSolve(vc$get())
x
class(x)
x$getinv()
traceback()
undebug()
undebug(cacheSolve)
source("cachematrix.R")
debug()
debug(makeCacheMatrix)
vc <- makeCacheMatrix(matrix(1:9,3,3))
cashSolve(vc$get())
cacheSolve(vc$get())
cacheSolve(vc)
cacheSolve(vc)
undebug(makeCacheMatrix)
source("cachematrix.R")
vc <- makeCacheMatrix(matrix(1:9,3,3))
cacheSolve(vc)
vc$get()
m <- vc$get
solve(m)
m
m <- vc$get()
solve(m)
?solve
?solve(m, LINPACK=FALSE)
?solve(m)
solve(m)
m[3,3]=9
m[3,3]=0
solve(m)
diag(m)
diag(m)<-1
m
solve(m)
